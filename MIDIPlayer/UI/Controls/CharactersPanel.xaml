<UserControl x:Class="Hscm.UI.CharactersPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Hscm.UI.Controls"
                         xmlns:UI="clr-namespace:Hscm.UI" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:cmd="http://www.galasoft.ch/mvvmlight"
             mc:Ignorable="d" BorderThickness="0" UseLayoutRounding="true" MinHeight="50" MinWidth="150">

    
            <UserControl.Resources>
        <Style TargetType="{x:Type Image}">
            <Setter Property="ToolTipService.InitialShowDelay" 
            Value="50"/>
            <Setter Property="ToolTipService.ShowDuration" 
            Value="2000"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Opacity" Value="1" />
                </Trigger>

                <Trigger Property="IsMouseOver" Value="false">
                    <Setter Property="Opacity" Value="0.7" />
                </Trigger>
            </Style.Triggers>
        </Style>
                
                
        <!--<Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
                

    </UserControl.Resources>


    <Border BorderBrush="#FF5E6270" BorderThickness="1" CornerRadius="3" >


        <Grid >

            <!-- Rounded mask (stretches to fill Grid) -->
            <Border Name="mask" Background="White" CornerRadius="3"/>

            <!-- Main content container -->
            <StackPanel Background="#FF151F27">
  
                <!-- Use a VisualBrush of 'mask' as the opacity mask -->
                <StackPanel.OpacityMask>
                    <VisualBrush Visual="{Binding ElementName=mask}"/>
                </StackPanel.OpacityMask>

    
                <!--<Label Foreground="#FFA9AEC1" FontSize="14" Content="{Binding ChosenInstrument}"></Label>-->

                <ItemsControl  Background="Transparent" ItemsSource="{Binding Characters}" BorderThickness="0" Margin="0,5,5,0"  
                         ScrollViewer.VerticalScrollBarVisibility="Disabled"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled" >

                    <!--<ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="BorderBrush" Value="Transparent"></Setter>
                            <Setter Property="BorderThickness" Value="0"></Setter>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True" >
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                            </Style.Triggers>
                            <Style.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                            </Style.Resources>
                        </Style>
                    </ListBox.ItemContainerStyle>-->

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <CheckBox Foreground="#d0969cb0" FontSize="10" Content="{Binding CharacterName}" IsChecked="{Binding IsSelected}" Command = "{Binding CharacterToggledCommand}" CommandParameter = "{Binding Path=CharacterName}">
                                    <!--<i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding CharacterCheckedCommand}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked">
                                        <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding CharacterUnheckedCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>-->
                                </CheckBox>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                
            </StackPanel>


        </Grid>






    </Border>
</UserControl>
